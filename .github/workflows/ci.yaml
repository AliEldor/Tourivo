name: deploy to s3

on:
  push:
    branches:
      - develop
      - main

jobs:
  Build-Backend-Image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_KEY }}


      - name: Build Docker image
        working-directory: backend
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/tourivo-backend:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/tourivo-backend:latest

  Build-Frontend-And-Deploy-On-S3:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Check Node.js version
        run: node -v

      - name: Check npm version
        run: npm -v

      - name: Inject GitHub secrets into .env.example
        working-directory: frontend
        run: |
          sed -i \
            "s|VITE_BASE_URL=.*|VITE_BASE_URL=http://${{ secrets.EC2_HOST_STAGING }}:3000|g" .env.example

      - name: Copy .env.example to .env
        working-directory: ./frontend
        run: cp .env.example .env

      - name: Install dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build React project
        working-directory: ./frontend
        run: npm run build

      - name: Copy build to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST_STAGING }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: frontend/dist
          target: /home/${{ secrets.EC2_USER }}/

      - name: Deploy to S3
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST_STAGING }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            mkdir -p ~/.aws
            cat <<EOF > ~/.aws/config
            [default]
            region = ${{ secrets.AWS_DEFAULT_REGION }}
            EOF
            aws s3 cp frontend/dist/ s3://fse-final-ali-dor --recursive --no-sign-request
            rm -rf frontend/

  Copy-docker-compose-To-EC2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Debugging file
        run: cat docker-compose.yaml

      - name: Inject GitHub secrets into docker-compose.yaml
        run: |
          sed -i "s|MONGO_URI=.*|MONGO_URI=${{ secrets.MONGO_URI }}|g" docker-compose.yaml
          sed -i "s|OPENAI_API_KEY=.*|OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}|g" docker-compose.yaml
          sed -i "s|JWT_SECRET_KEY=.*|JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}|g" docker-compose.yaml
      - name: Write multiline secret to file
        run: |
          mkdir -p credentials
          cat <<EOF > credentials/google-cloud-key.json
          ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}
          EOF
          

      - name: Debugging file
        run: cat docker-compose.yaml

      - name: Copy docker-compose to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST_STAGING }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: docker-compose.yaml
          target: /home/${{ secrets.EC2_USER }}/

  Deploy-Node-Docker:
    needs:
      - Build-Backend-Image
      - Build-Frontend-And-Deploy-On-S3
      - Copy-docker-compose-To-EC2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST_STAGING }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker-compose down
            docker rmi ${{ secrets.DOCKER_USERNAME }}/tourivo-backend:latest
            docker-compose up -d
